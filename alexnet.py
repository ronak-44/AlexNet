# -*- coding: utf-8 -*-
"""AlexNet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ObRZxJj6HJvEULAUW05iYMyAJtzTvLlV
"""

from keras.datasets import cifar10

(x_train, y_train),(x_test, y_test)=cifar10.load_data()

print((x_train.shape,y_train.shape))
print((x_test.shape,y_test.shape))

from keras.utils import to_categorical
y_train=to_categorical(y_train)
y_test=to_categorical(y_test)


print((x_test.shape,y_test.shape))

from keras.layers.experimental.preprocessing import Resizing

from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D
from keras.layers import Activation, Dropout, Flatten, Dense, UpSampling2D, BatchNormalization

model = Sequential()
model.add(Resizing(227,227, interpolation="bilinear"))
model.add(Conv2D(96, kernel_size=(11,11),strides=(4,4),padding='same',input_shape=(3, 224,224)))
model.add(BatchNormalization())
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2), strides=(2,2)))

model.add(Conv2D(256,kernel_size= (5,5),padding='same'))
model.add(BatchNormalization())
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))

model.add(Conv2D(384, (3, 3),padding='same'))
model.add(Activation('relu'))

model.add(Conv2D(384, (3, 3),padding='same'))
model.add(Activation('relu'))

model.add(Conv2D(256, (3, 3),padding='same'))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))

model.add(Flatten())

model.add(Dense(4096))
model.add(Activation('relu'))
model.add(Dropout(0.4))

model.add(Dense(4096))
model.add(Activation('relu'))
model.add(Dropout(0.4))


model.add(Dense(10))
model.add(Activation('softmax'))

#Model Summary
#model.summary()

import keras
model.compile(loss = keras.losses.categorical_crossentropy, optimizer= 'adam', metrics=['accuracy'])

epochs=50
model.fit(x_train, y_train, epochs = epochs, validation_split=0.3,verbose=1)

model.evaluate(x_test, y_test,verbose=1)

